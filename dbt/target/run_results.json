{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.13", "generated_at": "2025-09-30T03:29:51.897092Z", "invocation_id": "74624a7f-306a-4510-b6d0-23f600599900", "invocation_started_at": "2025-09-30T03:29:46.123133Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-30T03:29:49.494762Z", "completed_at": "2025-09-30T03:29:49.526722Z"}, {"name": "execute", "started_at": "2025-09-30T03:29:49.527788Z", "completed_at": "2025-09-30T03:29:50.100136Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.619767427444458, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.taxi_co2.green_tripdata", "compiled": true, "compiled_code": "\n\nSELECT \n    t.trip_distance, t.pickup_datetime, t.dropoff_datetime, t.passenger_count,\n    -- Calculate co2 output by multiplying trip distance by grams per mile, then divide to convert to kg\n    (t.trip_distance * e.co2_grams_per_mile / 1000) AS trip_co2,\n    -- Calculate avg mph by dividing distance by trip time, then multiplied by 3600 to convert to hours\n    (t.trip_distance * 3600) / date_diff('seconds', t.pickup_datetime, t.dropoff_datetime) AS avg_mph,\n\n    -- Extract month, week, hour, and year from datetime\n    MONTH(t.pickup_datetime) AS month,\n    WEEK(t.pickup_datetime) AS week_of_year,\n    HOUR(t.pickup_datetime) AS hour,\n    YEAR(t.pickup_datetime) AS year,\n    -- Assign day of week based on DAYOFWEEK number \n    CASE DAYOFWEEK(t.pickup_datetime)\n        WHEN 0 THEN 'Sunday'\n        WHEN 1 THEN 'Monday'\n        WHEN 2 THEN 'Tuesday'\n        WHEN 3 THEN 'Wednesday'\n        WHEN 4 THEN 'Thursday'\n        WHEN 5 THEN 'Friday'\n        WHEN 6 THEN 'Saturday'\n    END AS day_of_week\n\nFROM \"emissions\".\"main\".\"green_tripdata\" t\nJOIN \"emissions\".\"main\".\"emissions_lookup\" e\n    ON e.vehicle_type = 'yellow_taxi' --Select emissions that matches with taxi color \n\n", "relation_name": "\"emissions\".\"main\".\"green_tripdata\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-30T03:29:49.510866Z", "completed_at": "2025-09-30T03:29:49.533155Z"}, {"name": "execute", "started_at": "2025-09-30T03:29:49.552969Z", "completed_at": "2025-09-30T03:29:51.815178Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 2.3863778114318848, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.taxi_co2.yellow_tripdata", "compiled": true, "compiled_code": "\n\nSELECT \n    t.trip_distance, t.pickup_datetime, t.dropoff_datetime, t.passenger_count,\n    -- Calculate co2 output by multiplying trip distance by grams per mile, then divide to convert to kg\n    (t.trip_distance * e.co2_grams_per_mile / 1000) AS trip_co2,\n    -- Calculate avg mph by dividing distance by trip time, then multiplied by 3600 to convert to hours\n    (t.trip_distance * 3600) / date_diff('seconds', t.pickup_datetime, t.dropoff_datetime) AS avg_mph,\n\n    -- Extract month, week, hour, and year from datetime\n    MONTH(t.pickup_datetime) AS month,\n    WEEK(t.pickup_datetime) AS week_of_year,\n    HOUR(t.pickup_datetime) AS hour,\n    YEAR(t.pickup_datetime) AS year,\n    -- Assign day of week based on DAYOFWEEK number \n    CASE DAYOFWEEK(t.pickup_datetime)\n        WHEN 0 THEN 'Sunday'\n        WHEN 1 THEN 'Monday'\n        WHEN 2 THEN 'Tuesday'\n        WHEN 3 THEN 'Wednesday'\n        WHEN 4 THEN 'Thursday'\n        WHEN 5 THEN 'Friday'\n        WHEN 6 THEN 'Saturday'\n    END AS day_of_week\n\nFROM \"emissions\".\"main\".\"yellow_tripdata\" t\nJOIN \"emissions\".\"main\".\"emissions_lookup\" e\n    ON e.vehicle_type = 'yellow_taxi' --Select emissions that matches with taxi color\n\n", "relation_name": "\"emissions\".\"main\".\"yellow_tripdata\"", "batch_results": null}], "elapsed_time": 2.7040140628814697, "args": {"use_colors": true, "use_colors_file": true, "strict_mode": false, "warn_error_options": {"error": [], "warn": [], "silence": []}, "print": true, "require_all_warnings_handled_by_warn_error": false, "defer": false, "static_parser": true, "log_format": "default", "require_explicit_package_overrides_for_builtin_materializations": true, "upload_to_artifacts_ingest_api": false, "log_format_file": "debug", "printer_width": 80, "require_batched_execution_for_custom_microbatch_strategy": false, "log_level_file": "debug", "cache_selected_only": false, "state_modified_compare_more_unrendered_values": false, "write_json": true, "log_file_max_bytes": 10485760, "state_modified_compare_vars": false, "indirect_selection": "eager", "introspect": true, "require_yaml_configuration_for_mf_time_spines": false, "log_path": "/home/nylup/DS3022/ds3022-data-project-1/dbt/logs", "require_resource_names_without_spaces": true, "favor_state": false, "macro_debugging": false, "select": [], "log_level": "info", "partial_parse": true, "require_generic_test_arguments_property": true, "source_freshness_run_project_hooks": true, "which": "run", "partial_parse_file_diff": true, "show_resource_report": false, "populate_cache": true, "require_nested_cumulative_type_params": false, "version_check": true, "show_all_deprecations": false, "empty": false, "vars": {}, "profiles_dir": "/home/nylup/DS3022/ds3022-data-project-1/dbt", "send_anonymous_usage_stats": true, "project_dir": "/home/nylup/DS3022/ds3022-data-project-1/dbt", "use_fast_test_edges": false, "validate_macro_args": false, "quiet": false, "skip_nodes_if_on_run_start_fails": false, "invocation_command": "dbt run", "exclude": []}}